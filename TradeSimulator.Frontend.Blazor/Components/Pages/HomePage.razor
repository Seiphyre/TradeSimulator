@page "/"
@inherits HomePageBase

<PageTitle>Trade Simulator</PageTitle>

<MudText Typo="Typo.h2" Align="Align.Center" GutterBottom="true">Trade Simulator</MudText>
<MudText Typo="Typo.body1">
    This application has been made with Blazor, MudBlazor and SignalR. It require a connection to the server app to work.
    Choose a broker name and hit the connect button to start trading. Each broker has its own order books and a transaction history.
    Open an order book to see the orders of the ticker of your choice.
</MudText>

<MudStack Row="true" Justify="Justify.Center" AlignItems="AlignItems.Center" Class="mt-8">
    <MudTextField @bind-Value="BrokerId" Label="Broker Id" Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="@IsConnected"></MudTextField>
    @if (!IsConnected)
    {
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large" Disabled="@(IsConnected || IsConnecting)" OnClick=@ConnectBtn_OnClick>
            @if (IsConnecting)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                <MudText Class="ms-2">Connecting...</MudText>
            }
            else
            {
                <MudText>Connect</MudText>
            }
        </MudButton>
    }
    else
    {
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" Size="Size.Large" Disabled="@(!IsConnected || IsDisconnecting)" OnClick="@DisconnectBtn_OnClick">
            @if (IsDisconnecting)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                <MudText Class="ms-2">Disconnecting...</MudText>
            }
            else
            {
                <MudText>Disconnect</MudText>
            }
        </MudButton>
    }
</MudStack>

@if (IsConnected)
{
    <MudStack Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" Class="mt-8">
        <MudText Typo="Typo.h5" Align="Align.Left" GutterBottom="true" Class="mt-8">Order books</MudText>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large" OnClick=@CreateOrderBookBtn_OnClick>
            <MudText>New Order Book</MudText>
        </MudButton>
    </MudStack>

    @if (OrderBooks != null && OrderBooks.Count > 0)
    {
        <MudTable T="OrderBook" Items="@OrderBooks" Hover="true" OnRowMouseEnter=@OrderBookTable_OnRowMouseEnter OnRowMouseLeave="OrderBookTable_OnRowMouseLeave" Breakpoint="Breakpoint.Xs">
            <ColGroup>
                <col />
                <col />
                <col style="width: 1px;" />
            </ColGroup>
            <HeaderContent>
                <MudTh>Ticker</MudTh>
                <MudTh>Order count</MudTh>
                <MudTh></MudTh>
            </HeaderContent>
            <RowTemplate>
                @{
                    var ticker = Tickers.FirstOrDefault(Tickers => Tickers.Id == context.TickerId);
                    bool actionAreVisible = HoveredOrderBook != null && HoveredOrderBook.Id == context.Id;
                    string style = actionAreVisible ? "" : "visibility: hidden";

                    if (ticker != null)
                    {
                        <MudTd DataLabel="Layer">@ticker.DisplayName</MudTd>
                        <MudTd DataLabel="Layer">@(ticker.Orders?.Count ?? 0)</MudTd>
                        <MudTd DataLabel="">
                            <MudStack Row="true" Justify="Justify.FlexEnd" AlignItems="AlignItems.Center">
                                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(async () => await OpenOrderBookPage(context))" Style="@style">Open</MudButton>
                                <MudIconButton Icon="@Icons.Material.Filled.Delete" OnClick="@(async () => await DeleteOrderBook(context.Id))" Style="@style" />
                            </MudStack>
                        </MudTd>
                    }
                }
            </RowTemplate>
        </MudTable>
    }
    else
    {
        <MudText Typo="Typo.body1">Your order book list is empty. Click "New Order Book" to create your first order book.</MudText>
    }

    <MudStack Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" Class="mt-8">
        <MudText Typo="Typo.h5" Align="Align.Left" GutterBottom="true" Class="mt-8">Transactions</MudText>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large" OnClick=@OpenTransactionBtn_OnClick>
            <MudText>Open in new tab</MudText>
        </MudButton>
    </MudStack>

    @if (Transactions != null && Transactions.Count > 0)
    {
        <MudTable T="Transaction" Items="@Transactions" Hover="true" Breakpoint="Breakpoint.Xs">

            <HeaderContent>
                <MudTh>Time</MudTh>
                <MudTh>Side</MudTh>
                <MudTh>Ticker</MudTh>
                <MudTh>Price</MudTh>
                <MudTh>Quantity</MudTh>
            </HeaderContent>

            <RowTemplate>
                <MudTd DataLabel="Time">@context.CreationDate</MudTd>
                <MudTd DataLabel="Side">@context.TransactionType</MudTd>
                <MudTd DataLabel="Ticker">@context.TickerDisplayName</MudTd>
                <MudTd DataLabel="Price">@context.Price</MudTd>
                <MudTd DataLabel="Quantity">@context.Quantity</MudTd>
            </RowTemplate>
        </MudTable>
    }
    else
    {
        <MudText Typo="Typo.body1">No transactions</MudText>
    }
}
